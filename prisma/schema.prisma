// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  username String  @unique
  email    String  @unique
  password String
  image    String?

  bio          String?
  githubUrl    String?
  linkedInUrl  String?
  portfolioUrl String?


  following Follow[] @relation("following")
  followers Follow[] @relation("followers")

  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt

  posts    Post[]
  comments Comment[]
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  mediaUrl  String?
  mediaType String?
  authorId  String   @db.ObjectId
  likes     String[] @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt

  comments Comment[]

  author User @relation(fields: [authorId], references: [id])
}

model Comment {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  content  String
  postId   String @db.ObjectId
  authorId String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt

  post   Post @relation(fields: [postId], references: [id])
  author User @relation(fields: [authorId], references: [id])
}

model Follow {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  followerId  String @db.ObjectId
  followingId String @db.ObjectId

  follower    User   @relation("followers", fields: [followerId], references: [id])
  following   User   @relation("following", fields: [followingId], references: [id])

  createdAT DateTime @default(now())
  updatedAt DateTime? @updatedAt
}
